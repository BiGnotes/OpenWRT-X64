# Workflow name which is showed in GitHub Actions.
name: test

on:
  workflow_dispatch:
    inputs:
      force-build:
        description: "Build new firmware anyway"
        required: false
        default: "true"
      ssh:
        description: "SSH connection to Actions"
        required: false
        default: "false"

env:
  # REPO means the OpenWrt repo you want to build from in this workflow. 
  # You can modify the REPO_NAME to any name you want, but remember not to let it have the same name in 
  # other workflows.
  REPO_NAME: ImmortalWrt
  REPO_URL: https://github.com/immortalwrt/immortalwrt.git
  REPO_BRANCH: master
  BUILD_DEPENDS:  "ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
                  bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
                  g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
                  libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 \
                  libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm lrzsz mkisofs msmtp \
                  nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
                  python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig \
                  texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd jq"
  # CONFIG_FILE is the name of your own config files for compiling, you should upload these files into the root 
  # directory of your workflow repo.
  CONFIG_FILE: ./build/immortalwrt/.config
  # CUSTOM_SCRIPT_1 is the name of extra bash script you want to execute before feeds update&install.
  # CUSTOM_SCRIPT_2 is the name of extra bash script you want to execute after feeds update&install.
  # You can modify the initial settings of your firmware through these two scripts. If this is what you need,
  # please upload your scripts to the root directory of your workflow repo.
  CUSTOM_SCRIPT_1: ./build/immortalwrt/before.sh
  CUSTOM_SCRIPT_2: ./build/immortalwrt/after.sh
  # STORE_PRODUCTS determine whether to upload all compilation products to workflow artifacts.
  # Not only firmwires, all compiled packages will be here, including compiled but not solidified into firmware.
  STORE_PRODUCTS: false
  # STORE_FIRMWARE determine whether to upload firmwares to workflow artifacts.
  STORE_FIRMWARE: true
  # The following are options of where the firmware needs to be transfered. 
  COWTRANSFER_FIRMWARE: false
  WETRANSFER_FIRMWARE: false
  RELEASE_FIRMWARE: false
  # Change the following to your time zone.
  TIME_ZONE: Asia/Shanghai

jobs:
  build:
    name: Build firmware
    runs-on: ubuntu-latest
    needs: check
    permissions:
      contents: write
    if: needs.check.outputs.cache-hit != 'true' || github.event.inputs.force-build == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $BUILD_DEPENDS
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone $TIME_ZONE
          sudo mkdir -p /workdir/
          sudo chown $USER:$GROUPS /workdir/

      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone --depth 1 --branch $REPO_BRANCH --single-branch $REPO_URL openwrt/
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
